ئورد vfs ك نفف من '/vfs.mjs'؛
ئورد '/جيسس.css'؛ #ئيراد للنسخ
ئورد '/نورمليز.css'؛ #ئيراد للنسخ

ئورد رجكس، ئجلب، جواب؛

ئورد الكل ك ئتيلة من مكون.جيسس.ئتيلات؛

ئعلن جيسس ():
	يملك نصية جيسخام؛
	يملك مركب {نصية فوق، نصية وسط، نصية تحت} جيسنتيجة = {
		فوق: ''،
		وسط: ''،
		تحت: ''
	}؛
تم

ئعلن جيسس.حممل () ك وعد فارغ:
	هدا.جيسنتيجة = {
		فوق: ''،
		وسط: ''،
		تحت: ''
	}؛
	ئدا ليس هدا.جيسخام:
		#نصية مسارجي = نفف.مسارملفخام('جيسس.css')؛
		#هدا.جيسخام = ريتما نفف.ئقرئملف(مسارجي)؛
		جواب جو = ريتما ئجلب('/%D8%AC%D9%8A%D8%B3%D8%B3.css')؛
		هدا.جيسخام = ريتما جو.نص()؛
	تم
تم

ئعلن جيسس.ردنتيجة () ك نصية:
	ئرجع (هدا.جيسنتيجة.فوق + هدا.جيسنتيجة.وسط + هدا.جيسنتيجة.تحت)؛
تم

ئعلن جيسس.ردفوق () ك نصية:
	ئرجع هدا.جيسنتيجة.فوق؛
تم

ئعلن جيسس.ردوسط () ك نصية:
	ئرجع هدا.جيسنتيجة.وسط؛
تم

ئعلن جيسس.ردتحت () ك نصية:
	ئرجع هدا.جيسنتيجة.تحت؛
تم

ئعلن جيسس.موجودقبل (نصية سطر) ك منطق:
	ئرجع (هدا.جيسنتيجة.فوق.يتضمن(سطر) ئو 
			هدا.جيسنتيجة.وسط.يتضمن(سطر) ئو 
			هدا.جيسنتيجة.تحت.يتضمن(سطر)
		)؛
تم


ئعلن جيسس.ئستولد (نصية مصدر، نصية ئسمعنصر؟) ك وعد فارغ:
	ريتما هدا.حممل()؛
	رجكس رج = رجكس ('[\\u0620-\\u064A\\:_][0-9\\u0620-\\u064A_\\:\\-\\.]+'، 'gm')؛
	مصفوفة[] مطابقات = مصدر.طابقكل(رج)؛
	
	لكل مطابق في مطابقات:
		#كل مطابق هو مصفوفة لقيمات المطابقة
		نصية[] كلمقسم = (مطابق[0] ك نصية).قسسم(':')؛
		نصية كلمة = كلمقسم.ئسحب()؛
		منطق هلهام = خطئ؛
		ئدا كلمة == 'هام':
			هلهام = صحيح؛
			كلمة = كلمقسم.ئسحب()؛
		تم
		#هنا المتغير كلمة يتضمن الئسمصنف دون مئترين
		ئدا كلمة:
			نصية كلمبحت = (كلمة ك نصية).عووض('.'، '\\\\\.')؛
			رجكس رجكسطر = رجكس ("^.*\\._{كلمبحت}[, +].*$"، 'gm')؛ #بحت عام متعدد السطرين	
		
			مصفوفة[] مطابقاسطر = هدا.جيسخام.طابقكل(رجكسطر)؛
			لكل مطابقسطر في مطابقاسطر:
				نصية سطر = (مطابقسطر[0] ك نصية)؛
				منطق يبدئبنقطتان = (كلمقسم[0] == '')؛
				نصية سابقة = (ئسمعنصر ئدا يبدئبنقطتان وئلا ئسمعنصر + ' ') ئدا ئسمعنصر وئلا ''؛
				ئدا هلهام:
					سطر = ئتيلة.مئترهام(سطر، كلمة)؛
				تم
				لكل مئتر في كلمقسم.ئعكس():
					# مئترين نقطتان متل صغ:كدا
					ئدا مئتر == 'داكن':
						سطر = ئتيلة.مئترداكن(سطر، سابقة، ئسمعنصر)؛
					وئلا ئدا مئتر == 'تئشير':
						سطر = ئتيلة.مئترتئشير(سطر)؛
					وئلا ئدا (['صج'، 'صغ'، 'مت'، 'كب'، 'كج'، 'كجج']).يتضمن(مئتر):
						سطر = ئتيلة.مئترحجم(مئتر، سطر، سابقة)؛
					وئلا ئدا مئتر == 'قبل':
						سطر = ئتيلة.مئترقبل(سطر)؛
					وئلا ئدا مئتر == 'بعد':
						سطر = ئتيلة.مئتربعد(سطر)؛
					وئلا ئدا مئتر == '':
						سطر = ئتيلة.مئترنقطتان(سطر)؛
					تم
				تم
				
				ئدا ليس هدا.موجودقبل(سطر):
					ئدا سطر.يتضمن('.تصفير'):
						هدا.جيسنتيجة.فوق = هدا.جيسنتيجة.فوق + سابقة + سطر؛
					وئلا ئدا سطر.يتضمن('media') ئو سطر.يتضمن('.داكن'):					
						هدا.جيسنتيجة.تحت = هدا.جيسنتيجة.تحت + سطر؛
					وئلا:						
						هدا.جيسنتيجة.وسط = هدا.جيسنتيجة.وسط + سابقة + سطر؛
					تم
				تم
			تم
		تم
	تم	
تم

#يستطوف جميع ملفين ضمن المسار المعطا
#ويستولد جيسس لكل واحد منهم
#ويستجمع الحاصل في ملف سيسس
#يضعه في ئصل المسار المعطا
ئعلن ئستولدجيسس () ك وعد:
	جيسس جيس = جيسس()؛
	
	# يقرئ الملفين المخرجين في المشروع الحالي
	نصية[] ملفين = ريتما نفف.ئقرئمجلدخام()؛
	ملفين = ملفين.رششح(دالة (نصية عنصر): ليس عنصر.يبدئب('ئساسية.'))؛
	ملفين = ملفين.رششح(دالة (نصية عنصر): عنصر.ينتهيب('.mjs') ئو عنصر.ينتهيب('.html'))؛
	
	# يقرئ نورمليز الدي يكون مطلع النتيجة
	جواب جو = ريتما ئجلب('/%D9%86%D9%88%D8%B1%D9%85%D9%84%D9%8A%D8%B2.css')؛
	نصية نورمليز = ريتما جو.نص()؛
	#نصية مسارنورم = نفف.مسارملفخام('نورمليز.css')؛
	#نصية نورمليز = ريتما نفف.ئقرئملف(مسارنورم)؛
	
	# لكل ملف يستدعي جيسس.ئستولد()
	نصية نتجفوق = ''؛
	نصية نتجوسط = ''؛
	نصية نتجتحت = ''؛
	لكل ئسملف في ملفين:
		نصية مساري = نفف.مسارملفخام(ئسملف)؛
		نصية محتواه = ريتما نفف.ئقرئملف(مساري)؛
		ريتما جيس.ئستولد(محتواه)؛
		# يكتب النتيجة في ملف ستايل
		نتجفوق = نتجفوق + "/*_{ئسملف}*/\n_{جيس.ردفوق()}\n"؛
		نتجوسط = نتجوسط + "/*_{ئسملف}*/\n_{جيس.ردوسط()}\n"؛
		نتجتحت = نتجتحت + "/*_{ئسملف}*/\n_{جيس.ردتحت()}\n"؛
	تم
	
	#يضيف نورمليز مطلع النتيجة
	ريتما نفف.ئكتبملف(نفف.مسارملفخام('style.css')، "_{نورمليز}\n_{نتجفوق}_{نتجوسط}_{نتجتحت}")؛
تم

