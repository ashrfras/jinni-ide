ئورد بتشدبي، معلوقاب من مكون.بتشدبي؛
ئورد الئان من تاريخ؛
ئورد الكل ك سياق من سياق؛
ئورد مجال من ئساسية.مصفوفة؛
ئورد الكل ك رياضيات من ئساسية.رياضيات؛
ئورد نتجقاب من بتشدبي؛
ئورد مختطمشروع، مختطوحدة، مختطبطاقة من مختطة؛

ئعلن قابمحلي ك بتشدبي؛
ئعلن مشروعحالي ك مختطمشروع؛

ئعلن هلقاعدب () ك وعد منطق:
	ئدا ليس قابمحلي:
		قابمحلي = بتشدبي(سياق.ئسمقاب)؛
	تم
	مشروعحالي = ريتما قابمحلي.ئجلب('مشروع')؛
	ئرجع مشروعحالي لا= عدم؛
تم

ئعلن ئستبدئقاب () ك وعد:
	ئدا ليس قابمحلي:
		قابمحلي = بتشدبي(سياق.ئسمقاب)؛
	تم
	#يحدف جميع الجدولين
	ريتما قابمحلي.ئهدم()؛
	#ينشئ قاب جديد
	قابمحلي = بتشدبي(سياق.ئسمقاب)؛
	#ئرسائ الفهرسين
	ريتما قابمحلي.خدفهرس(
		حقلين: ["نوع"، "وحدة"]
	)؛
	ريتما قابمحلي.خدفهرس(
		حقلين: ["نوع"]
	)؛
تم

ئعلن ئستبدئمشروع(مختطمشروع مشروع، مختطوحدة[] وحدات، مختطبطاقة[] بطاقات) ك وعد:
	ريتما قابمحلي.خدواحد(مشروع)؛
	ريتما قابمحلي.خدعديد(وحدات)؛
	ريتما قابمحلي.خدعديد(بطاقات)؛
	مشروعحالي = مشروع؛
تم

ئعلن ئدمجبطاقات () ك وعد مركب[] {نصية مسار، نصية محتوا}:
	مركب[] {نصية مسار، نصية محتوا} نتيجة = []؛
	نتجقاب نتج = ريتما قابمحلي.ئستعلم(
		حدد: {
			نوع: 'وحدة'
		}
	)؛
	مختطوحدة[] وحدات = نتج.وتيقات؛
	وحدات = وحدات.رششح(دالة(وح): وح.ئاخرئيداع > مشروعحالي.ئاخرئيداع)؛
	لكل وحدة في وحدات:
		قل وحدة؛
		نتج = ريتما قابمحلي.ئستعلم(
			حدد: {
				نوع: 'بطاقة'،
				وحدة: وحدة.مسار
			}
		)؛
		مختطبطاقة[] بطاقات = نتج.وتيقات؛
		نصية[] محتويين = بطاقات.طببق(دالة (مختطبطاقة بط): بط.محتوا)؛
		نتيجة.ئدفع({
			مسار: وحدة.مسار،
			محتوا: محتويين.ئدمج('\n')
		})؛
	تم
	ئرجع نتيجة؛
تم
