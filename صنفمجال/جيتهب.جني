ئورد الكل ك سياق من سياق؛
ئورد مصفبلش8، مفككترميز؛
ئورد ئجلب، جواب، ترويسة؛
ئورد مجال من مصفوفة؛
ئورد رجكس؛
ئورد الكل من جيزن؛

ئعلن هلرابطصحيح (نصية رابط) ك نصية[]:
	رجكس رجك = رجكس('github\\.com\\/([^\\/]+)\\/([^\\/]+)')؛
	نصية[] طباقين = رابط.طابق(رجك)؛
	
	ئدا ليس طباقين:
		ئرجع عدم؛ #صيغة رابط غير صحيحة
	وئلا:
		ئرجع طباقين؛
	تم
تم

ئعلن ردمعلومستودع (نصية رابط، نصية توكن) ك وعد مركب {نصية مالك، نصية مستودع، نصية وصف، نصية فرعمفترض}:
	نصية[] طباقين = هلرابطصحيح(رابط)؛
	
	ئدا ليس طباقين:
		ئرجع عدم؛
	تم
	
	نصية مالك = طباقين[1]؛
	نصية مستودع = طباقين[2]؛
	
	#ئستعلام برماجة جيتهب
	جواب جو = ريتما ئجلب(
		عنونت: "%{سياق.برماجيت}/%{مالك}/%{مستودع}"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")
		]
	)؛
	
	ئدا جو.ناجح:
		دع نتج = ريتما جو.جيزن()؛
		ئرجع {
			مالك،
			مستودع،
			وصف: نتج['description']،
			فرعمفترض: نتج['default_branch']
		}؛
	وئلا:
		ئرجع عدم؛
	تم
تم

ئعلن ردجميعملفات (نصية توكن، نصية مالك، نصية مستودع، نصية فرع) ك وعد مركب[]:
	#جلب معرف ئاخر ئيداع
	نصية معرفئيداع؛
	حاول:
		جواب جوئاخرئيداع = ريتما ئجلب(
			عنونت: "_{سياق.برماجيت}/_{مالك}/_{مستودع}/git/refs/heads/_{فرع}"،
			ترويسات: [
				ترويسة('تخويل'، "token %{توكن}")
			]
		)؛
		دع بيائاخرئيداع = ريتما جوئاخرئيداع.جيزن()؛
		معرفئيداع = بيائاخرئيداع['object'].sha؛
	ئستدرك:
		#لا يوجد ئيداع، لعل المستودع فارغ
		ئرجع []؛
	تم
	
	#جلب معرف الشجرة
	جواب جوئيداع = ريتما ئجلب(
		عنونت: "_{سياق.برماجيت}/_{مالك}/_{مستودع}/git/commits/_{معرفئيداع}"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")
		]
	)؛
	دع بيائيداع = ريتما جوئيداع.جيزن()؛
	نصية معرفشجرة = بيائيداع['tree'].sha؛
	
	#جلب شجرة ملفات المستودع
	جواب جوشجرة = ريتما ئجلب(
		عنونت: "_{سياق.برماجيت}/_{مالك}/_{مستودع}/git/trees/_{معرفشجرة}?recursive=1"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")
		]
	)؛
	دع بياشجرة = ريتما جوشجرة.جيزن()؛
	منوع[] بيا = بياشجرة['tree']؛
	دع نتج = بيا.رششح(دالة (عنصر): عنصر['type'] == 'blob')؛
	ئرجع نتج؛
تم

ئعلن ئساس64ئلايوتف8 (ئساس64) ك نصية:
	نصية نصئتنائي = ئساس64.فكترميز64()؛
	عدد طول = نصئتنائي.طول؛
	
	مصفبلش8 بايتات = مصفبلش8(طول)؛
	لكل ع في مجال(0، طول):
		بايتات[ع] = نصئتنائي.ردرمزحرف(ع)؛
	تم
	
	مفككترميز مفك = مفككترميز('يوتف8')؛
	ئرجع مفك.فكترميز(بايتات)؛
تم

ئعلن ردمحتواملف (نصية توكن، نصية مالك، نصية مستودع، نصية مسار) ك وعد نصية:
	جواب جومحتوا = ريتما ئجلب(
		عنونت: "%{سياق.برماجيت}/%{مالك}/%{مستودع}/contents/%{مسار}"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")
		]
	)؛
	دع بيامحتوا = ريتما جومحتوا.جيزن()؛
	ئرجع ئساس64ئلايوتف8(بيامحتوا['content'])؛
	#ئرجع (بيامحتوا['content'] ك نصية).فكترميز64()؛
تم


ئعلن ئودعفارغ (نصية توكن، نصية مالك، نصية مستودع، نصية فرع، نصية ئسمشروع) ك وعد فارغ:
	#ينشئ ئيداع ئولي جديد علا مستودع فارغ
	
	#ئرسال بلوب
	نصية[] محتوا = [
		'ئورد المستند من مستند؛'،
		'ئعلن مدخل():'،
		'	المستند.جسم.ئشتملداخلي = (<حيز>مرحبا جني</حيز>)؛'،
		'تم'
	]؛
	جواب جوبلوب = ريتما ئجلب(
		نوع: 'ئوضع'،
		عنونت: "%{سياق.برماجيت}/%{مالك}/%{مستودع}/contents/%{ئسمشروع}.جني"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")،
			ترويسة('يرجع'، 'جيزن')
		]،
		جسم: جيزن.ئلانصية({
			content: محتوا.ئدمج('\n').رممز64()،
			message: 'ئيداع ئستبدائ المستودع'
		})
	)؛
	دع بيابلوب = ريتما جوبلوب.جيزن()؛
تم

ئعلن ئودعجديد (نصية توكن، نصية مالك، نصية مستودع، نصية فرع، مركب[] {نصية مسار، نصية محتوا} تعديلات) ك وعد مركب {نصية معرفشجرةجديدة، نصية معرفئاخرئيداع}:
	#ينشئ يئداع جديد علا مستودع موجود
	
	#جلب معرف ئاخر ئيداع
	جواب جوئاخرئيداع = ريتما ئجلب(
		عنونت: "%{سياق.برماجيت}/%{مالك}/%{مستودع}/git/refs/heads/%{فرع}"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")
		]
	)؛
	ئدا ليس جوئاخرئيداع.ناجح:
		ئلقي فشل('تعدر جلب ئاخر ئيداع')؛
	تم
	دع بيائاخرئيداع = ريتما جوئاخرئيداع.جيزن()؛
	نصية معرفئاخرئيداع = بيائاخرئيداع['object'].sha؛
	
	#جلب معرف الشجرة
	جواب جوئيداع = ريتما ئجلب(
		عنونت: "%{سياق.برماجيت}/%{مالك}/%{مستودع}/git/commits/%{معرفئاخرئيداع}"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")
		]
	)؛
	ئدا ليس جوئيداع.ناجح:
		ئلقي فشل('تعدر جلب شجرة الئيداع')؛
	تم
	دع بيائيداع = ريتما جوئيداع.جيزن()؛
	نصية معرفشجرة = بيائيداع['tree'].sha؛
	
	#فرز التعديلات
	مركب[] تعدي = []؛
	لكل تع في تعديلات:
		ئدا تع['محتوا'] == '<محدوف>':
			تعدي.ئدفع({
				path: تع['مسار']،
				mode: '100644'، #نمط ملف
				type: 'blob'،
				sha: عدم #الملف يحدف
			})؛
		وئلا:
			تعدي.ئدفع({
				path: تع['مسار']،
				mode: '100644'، #نمط ملف
				type: 'blob'،
				content: تع['محتوا']
			})؛
		تم
	تم
	
	#ئنشائ شجرة جديدة بالتعديلات
	جواب جوشجرجديدة = ريتما ئجلب(
		نوع: 'ئبعت'،
		عنونت: "%{سياق.برماجيت}/%{مالك}/%{مستودع}/git/trees"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")،
			ترويسة('يرجع'، 'جيزن')
		]،
		جسم: جيزن.ئلانصية({
			base_tree: معرفشجرة،
			tree: تعدي
		})
	)؛
	ئدا ليس جوشجرجديدة.ناجح:
		ئلقي فشل('تعدر ئنشائ شجرة التعديلات')؛
	تم
	دع بياشجرجديدة = ريتما جوشجرجديدة.جيزن()؛
	نصية معرفشجرةجديدة = بياشجرجديدة['sha']؛
	ئرجع {
		معرفشجرةجديدة،
		معرفئاخرئيداع
	}؛
تم

ئعلن ئودعملفات (نصية توكن، نصية مالك، نصية مستودع، نصية فرع، مركب[] {نصية مسار، نصية محتوا} تعديلات، نصية رسالة، نصية ئسمشروع) ك وعد:
	نصية معرفشجرةجديدة؛
	نصية معرفئاخرئيداع؛
	
	حاول:
		مركب {نصية معرفشجرةجديدة، نصية معرفئاخرئيداع} نتج = ريتما ئودعجديد(توكن، مالك، مستودع، فرع، تعديلات)؛
		معرفشجرةجديدة = نتج.معرفشجرةجديدة؛
		معرفئاخرئيداع = نتج.معرفئاخرئيداع؛
	ئستدرك:
		حاول:
			ريتما ئودعفارغ(توكن، مالك، مستودع، فرع، ئسمشروع)؛
			ئرجع ئودعملفات(توكن، مالك، مستودع، فرع، تعديلات، رسالة، ئسمشروع)؛
		ئستدرك ف ك فشل:
			قل ف؛
		تم
	تم
	
	#ئنشائ ئيداع جديد
	جواب جوئيداعجديد = ريتما ئجلب(
		نوع: 'ئبعت'،
		عنونت: "%{سياق.برماجيت}/%{مالك}/%{مستودع}/git/commits"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")،
			ترويسة('يرجع'، 'جيزن')
		]،
		جسم: جيزن.ئلانصية({
			message: رسالة،
			tree: معرفشجرةجديدة،
			parents: [معرفئاخرئيداع]
		})
	)؛
	ئدا ليس جوئيداعجديد.ناجح:
		ئلقي فشل('تعدر ئنشائ الئيداع')؛
	تم
	دع بيائيداعجديد = ريتما جوئيداعجديد.جيزن()؛
	نصية معرفئيداعجديد = بيائيداعجديد['sha']؛
	
	#تحديت المرجع للئشارة ئلا الئيداع الجديد
	ريتما ئجلب(
		نوع: 'ئنقح'،
		عنونت: "%{سياق.برماجيت}/%{مالك}/%{مستودع}/git/refs/heads/%{فرع}"،
		ترويسات: [
			ترويسة('تخويل'، "token %{توكن}")،
			ترويسة('يرجع'، 'جيزن')
		]،
		جسم: جيزن.ئلانصية({
			sha: معرفئيداعجديد
		})
	)؛
تم
